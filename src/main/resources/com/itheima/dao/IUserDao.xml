<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.itheima.dao.IUserDao">

    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.itheima.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>


    <!-- 了解的内容：抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>


    <!--&lt;!&ndash;配置查询所有 &ndash;&gt;-->
      <!--<select id="findAll" resultType="com.itheima.domain.User">-->
          <!--select * from user;-->
      <!--</select>-->


    <!-- 查询所有 -->
    <select id="findAll" resultMap="userMap">
        <!-- select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user;-->
    select * from user;
</select>

<!-- 保存用户 -->
    <insert id="saveUser" parameterType="com.itheima.domain.User">
        <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.itheima.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId}
    </update>

    <!-- 删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid};
    </delete>

    <!-- 根据id查询用户-->
    <select id="findById" parameterType="java.lang.Integer"  resultType="com.itheima.domain.User">
        select * from user where id = #{uid};
    </select>

    <!-- 根据用户名模糊查询用户信息-->
    <select id="findByUserName" parameterType="string"  resultType="com.itheima.domain.User">
        <!-- select * from user where username like #{username}; -->
       select * from user where username like '%${value}%';
   </select>

    <!-- 查询总记录数-->
    <select id="findTotal"  resultType="int">
        select count(*) from user;
    </select>

    <!-- 根据queryvo中的查询条件查询用户-->
    <select id="testFindUsersByVo" parameterType="com.itheima.domain.QueryVo"  resultType="com.itheima.domain.User">
        select * from user where username like #{user.username};
    </select>

    <!-- 根据条件查询-->
    <!--<select id="findUserByCondition" resultMap="userMap" parameterType="com.itheima.domain.User">-->
        <!--select * from user where 1=1-->
        <!--<if test="userName != null">-->
            <!--and username = #{userName}-->
        <!--</if>-->
        <!--<if test="userSex != null">-->
            <!--and sex = #{userSex}-->
        <!--</if>-->
    <!--</select>-->
    <select id="findUserByCondition" resultMap="userMap" parameterType="com.itheima.domain.User">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!-- 根据queryvo中的Id集合实现查询用户列表 -->
    <select id="findUserInIds" resultMap="userMap" parameterType="com.itheima.domain.QueryVo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>